//
//  HomeInteractor.swift
//  GitHubFinder
//
//  Created by Saul Goodman on 07.12.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

typealias completionRepositories = (_ repo: GitApiResponse?, _ error: String?) -> ()

final class HomeInteractor {
    private var networkManager: iGitNetworkManager!
    
    init(networkManager: GitNetworkManager = GitNetworkManager()) {
        self.networkManager = networkManager
    }
}

// MARK: - Extensions -

extension HomeInteractor: HomeInteractorInterface {
    func searchRepositoriesWith(text: String, page: Int, completion: @escaping completionRepositories) {
        
        networkManager.router.request(.search(text: text, page: page)) { [weak self] data, response, error in
            
            if let response = response as? HTTPURLResponse {
                
                guard let result = self?.networkManager.handleNetworkResponse(response) else {
                    completion(nil, nil)
                    return
                }
                
                switch result {
                case .success:
                    
                    guard let responseData = data else {
                        completion(nil, NetworkResponse.noData.rawValue)
                        return
                    }
                    
                    do {
                        let apiResponse = try JSONDecoder().decode(GitApiResponse.self, from: responseData)
                        completion(apiResponse, nil)
                    }
                    catch {
                        completion(nil, NetworkResponse.unableToDecode.rawValue)
                    }
                    
                    
                case .failure(let networkFailureError):
                    print(networkFailureError)
                }
            }
        }
    }
}
